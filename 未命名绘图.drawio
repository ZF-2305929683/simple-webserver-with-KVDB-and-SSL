<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0" version="27.1.3">
  <diagram name="Page-1" id="c4acf3e9-155e-7222-9cf6-157b1a14988f">
    <mxGraphModel dx="2543" dy="2270" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" background="none" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="OO0f6Ug3bfgoFBQV2GJi-3" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Arena&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;div style=&quot;height:2px;&quot;&gt;&lt;/div&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;div style=&quot;height:2px;&quot;&gt;&lt;/div&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="480" y="-90" width="140" height="60" as="geometry" />
        </mxCell>
        <mxCell id="OO0f6Ug3bfgoFBQV2GJi-4" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SkipList&amp;lt;Key,Comparator&amp;gt;&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; kMaxHeight: int = 12&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; compare_ : Comparator const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; head_ : Node* const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; arena_ : Arena* const&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; max_height_ : port::AtomicPointer&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; rnd_ : Random&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;+ Insert(const Key&amp;amp; key)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;+ Contains(const Key&amp;amp; key) const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;+ dump() const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; GetMaxHeight() const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; NewNode(const Key&amp;amp; key,int height)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; RandomHeight()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; Equal(const Key&amp;amp; a,const Key&amp;amp; b) const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; KeyIsAfterNode(const Key&amp;amp; key,Node* n) const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; FindGreaterOrEqual(const Key&amp;amp; key,Node** prev) const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; FindLessThan(const Key&amp;amp; key) const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; FindeLast() const&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="350" y="30" width="400" height="310" as="geometry" />
        </mxCell>
        <mxCell id="OO0f6Ug3bfgoFBQV2GJi-8" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Node&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ key : Key const&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; next_ : port:AtomicPointer[1]&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Next(int n)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ SetNext(int n,Node* x)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ NoBarrier_Next(int n)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ NoBarrier_SetNext(int n,Node* x)&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="50" y="340" width="200" height="180" as="geometry" />
        </mxCell>
        <mxCell id="OO0f6Ug3bfgoFBQV2GJi-9" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Skiplist::Iterator&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; list_ : SkipList* const&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;-&amp;nbsp; node_ : Node*&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Valid() const : bool&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ key() const : const Key&amp;amp;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Next()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Prev()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Seek(const Key&amp;amp; target)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ SeekToFirst()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ SeekToLast()&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="350" y="430" width="200" height="180" as="geometry" />
        </mxCell>
        <mxCell id="OO0f6Ug3bfgoFBQV2GJi-10" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0;entryY=1;entryDx=0;entryDy=0;exitX=1;exitY=0;exitDx=0;exitDy=0;" parent="1" source="OO0f6Ug3bfgoFBQV2GJi-8" target="OO0f6Ug3bfgoFBQV2GJi-4" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="250" y="430" as="sourcePoint" />
            <mxPoint x="410" y="430" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MemTable&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; comparator_ : KeyComparator&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; refs_ : int&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; arena_ : Arena&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; table_ : Table(SkipList)&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Ref()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Unref(int n,Node* x)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ ApproximateMemoryUsage&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;() : size_t&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ NewIterator() : Iterator*&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Add(SequenceNumber seq,ValueType&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;type,const Slice&amp;amp; key,const Slice&amp;amp; value )&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Get(const LookupKey&amp;amp; key,std::string*&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;value,Status* s) : bool&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; ~MemTable()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; MemTable(const MemTable&amp;amp;)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; Operator=(const Memtable&amp;amp;)&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="810" y="30" width="250" height="290" as="geometry" />
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-6" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" target="8JIWFr8eSDHBCrZjfCdh-1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="750" y="30" as="sourcePoint" />
            <mxPoint x="770" y="-210" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-7" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;exitX=1;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="OO0f6Ug3bfgoFBQV2GJi-3" target="8JIWFr8eSDHBCrZjfCdh-1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="220" y="30" as="sourcePoint" />
            <mxPoint x="300" y="-10" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-8" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;KeyComparator&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ comparator :&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-align: center;&quot;&gt;InternalKeyComparator&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;const&lt;/span&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ KeyComparator(const InternalKeyComparator&amp;amp; c)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ operator()(const char* a,const char* b) const : int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="1120" y="210" width="280" height="130" as="geometry" />
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-10" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0.999;entryY=0.844;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryPerimeter=0;" edge="1" parent="1" source="8JIWFr8eSDHBCrZjfCdh-8" target="8JIWFr8eSDHBCrZjfCdh-1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="249" y="-170" as="sourcePoint" />
            <mxPoint x="249" y="-280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-11" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;InternalKeyComparator&lt;/b&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="1190" y="70" width="140" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-13" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MemTableBackwardIterator&lt;/b&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="790" y="390" width="170" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-14" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="8JIWFr8eSDHBCrZjfCdh-11" target="8JIWFr8eSDHBCrZjfCdh-8">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1500" y="50" as="sourcePoint" />
            <mxPoint x="1370" y="110" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-15" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;" edge="1" parent="1" source="8JIWFr8eSDHBCrZjfCdh-11" target="8JIWFr8eSDHBCrZjfCdh-1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="310" y="-290" as="sourcePoint" />
            <mxPoint x="180" y="-290" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-16" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=0;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="8JIWFr8eSDHBCrZjfCdh-21">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="-490" as="sourcePoint" />
            <mxPoint x="970" y="320" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-25" value="friend" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="8JIWFr8eSDHBCrZjfCdh-16">
          <mxGeometry x="-0.0358" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-17" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="8JIWFr8eSDHBCrZjfCdh-13" target="8JIWFr8eSDHBCrZjfCdh-1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="690" y="-530" as="sourcePoint" />
            <mxPoint x="560" y="-530" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-24" value="friend" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="8JIWFr8eSDHBCrZjfCdh-17">
          <mxGeometry x="-0.3198" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-18" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" target="OO0f6Ug3bfgoFBQV2GJi-4">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="480" y="-30" as="sourcePoint" />
            <mxPoint x="260" y="160" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-19" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="OO0f6Ug3bfgoFBQV2GJi-4" target="OO0f6Ug3bfgoFBQV2GJi-9">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="670" y="450" as="sourcePoint" />
            <mxPoint x="800" y="450" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-20" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="OO0f6Ug3bfgoFBQV2GJi-8" target="OO0f6Ug3bfgoFBQV2GJi-9">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="390" as="sourcePoint" />
            <mxPoint x="330" y="480" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-21" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MemTableIterator&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;iter_ :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MemTable::Table::Iterator&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; tmp_ : std::string&lt;/p&gt;&lt;hr size=&quot;1&quot; style=&quot;border-style:solid;&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ MemTableIterator(MemTable::Table* table)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Valid() const : bool&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Seek(const Slice&amp;amp; k)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ SeekToFirst()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ SeekToLast()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Next()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Prev()&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ key() const : Slice&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ value() const : Slice&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ status() const : Status&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; MemTableIterator(const MemTableIterator&amp;amp;)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; operator=(const&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MemTableIterator&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="970" y="420" width="260" height="280" as="geometry" />
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-22" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Iterator&lt;/b&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="870" y="790" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-23" value="" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="8JIWFr8eSDHBCrZjfCdh-21" target="8JIWFr8eSDHBCrZjfCdh-22">
          <mxGeometry width="80" relative="1" as="geometry">
            <mxPoint x="200" y="-750" as="sourcePoint" />
            <mxPoint x="280" y="-750" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JIWFr8eSDHBCrZjfCdh-28" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;" edge="1" parent="1" source="OO0f6Ug3bfgoFBQV2GJi-9" target="8JIWFr8eSDHBCrZjfCdh-21">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="710" y="520" as="sourcePoint" />
            <mxPoint x="710" y="610" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
